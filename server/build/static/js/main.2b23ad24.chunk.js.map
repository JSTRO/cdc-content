{"version":3,"sources":["stores/UserStore.js","components/Submit.js","components/Register.js","components/Search.js","components/Article.js","utils/formatDate.js","hooks/useAPI.js","components/ArticleList.js","auth/logout.js","components/Drawer.js","auth/login.js","App.js","hooks/usePagination.js","serviceWorker.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","list","useStyles","makeStyles","theme","root","margin","spacing","Submit","text","disabled","color","onClick","classes","className","Button","variant","type","Register","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","marginLeft","width","breakpoints","up","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputInput","padding","transition","transitions","create","Search","setSearch","InputBase","placeholder","name","value","onChange","event","target","inputRoot","input","inputProps","details","flexDirection","content","flex","maxWidth","chip","Article","article","setMyList","id","description","datePublished","tags","owningOrgId","sourceUrl","useState","isBtnDisabled","setIsBtnDisabled","a","axios","url","method","headers","data","JSON","stringify","UserStore","listID","res","result","success","push","Card","CardContent","Typography","component","gutterBottom","Link","href","underline","date","y","Date","getFullYear","m","getMonth","d","getDate","formatDate","map","tag","Chip","size","label","clickable","key","IconButton","aria-label","useAPI","setLoading","error","setError","articles","setArticles","useEffect","get","results","getResults","ArticleList","console","log","appBar","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","PersistentDrawerRight","myList","useTheme","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","noWrap","edge","Drawer","anchor","paper","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","item","disabed","logout","observer","currentPage","setCurrentPage","articlesPerPage","filteredArticles","setFilteredArticles","indexOfLastPost","indexOfFirstPost","currentArticles","slice","pageCount","Math","ceil","length","filter","toLowerCase","includes","handleChange","usePagination","login","Pagination","count","page","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2b23ad24.chunk.js","sourcesContent":["import { extendObservable } from 'mobx'\n\nclass UserStore {\n\tconstructor() {\n\t\textendObservable(this, {\n\t\t\tloading: true,\n\t\t\tisLoggedIn: false,\n\t\t\tusername: '',\n\t\t\tlist: []\n\t\t})\n\t}\n}\n\nexport default new UserStore()","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}))\n\nfunction Submit({text, disabled, color, onClick}) {\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcolor={color}\n\t\t\t\ttype=\"submit\"\n\t\t\t\tclassName=\"button-block\"\n\t\t\t\tdisabled={disabled}\n\t\t\t\tonClick={() => onClick()}\n\t\t\t\t>\n\t\t\t\t\t{text}\n\t\t\t</Button>\n\t\t</div>\n\t)\n}\n\nexport default Submit","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport TextField from '@material-ui/core/TextField'\nimport Submit from './Submit'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport '../App.css'\n\nfunction Register() {\n\tconst [username, setUsername] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [confirm, setConfirm] = useState('')\n\tconst [buttonDisabled, setButtonDisabled] = useState(false)\n\n\tconst setInputValue = event => {\n\t\tlet {name, value} = event.target\n\t\tvalue = value.trim()\n\t\tif (value.length > 12) {\n\t\t\treturn\n\t\t}\n\t\tif (name === 'username') {\n\t\t\tsetUsername(value)\n\t\t} else if (name === 'password') {\n\t\t\tsetPassword(value)\n\t\t} else {\n\t\t\tsetConfirm(value)\n\t\t}\n\t}\n\n\tconst resetForm = () => {\n\t\tsetUsername('')\n\t\tsetPassword('')\n\t\tsetButtonDisabled(false)\n\t}\n\n\tconst doRegister = async () => {\n\t\tif (!username) return\n\t\tif (!password) return\n\t\tif (!confirm) return\n\t\tsetButtonDisabled(true)\n\n\t\ttry {\n\t\t\tlet res = await axios({\n\t\t\t\turl: '/register',\n\t\t\t\tmethod: 'post',\n\t\t\t\theaders: { \n\t      \t'Accept': 'application/json', \n\t      \t'Content-Type': 'application/json' \n\t      },\n\t      data: JSON.stringify({\n\t      \tusername: username,\n\t      \tpassword: password,\n\t      \tconfirm: confirm\n\t      })\n\t\t\t})\n\n\t\t\tlet result = await res.data\n\n\t\t\tif (result && result.success) {\n        alert(result.msg)\n      } else if (result && result.success === false) {\n    \t\tresetForm()\n    \t\talert(result.msg)\n      }\n\t  } catch(err) {\n\t  \t\tresetForm()\n\t  }\n\t}\n\n\treturn (\n\t\t<div className=\"register\">\n\t\t\t<Grid container spacing={0} justify=\"center\" direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\tclassName=\"login-form\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Paper variant=\"elevation\" elevation={2} className=\"login-background\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t<Grid container direction=\"column\" spacing={2}>\n\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"username\"\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"username\"\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={username ? username : ''}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={setInputValue}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t  label=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t  type=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t  variant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t  value={password ? password : ''}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={setInputValue}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t<TextField \n\t\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"confirm\"\n\t\t\t\t\t\t\t\t\t\t\t  label=\"confirm password\"\n\t\t\t\t\t\t\t\t\t\t\t  type=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t  variant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t  value={confirm ? confirm : ''}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={setInputValue}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t<Submit \n\t\t\t\t\t\t\t\t\t\t\t\ttext='Register'\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={buttonDisabled}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => doRegister()}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\tAlready a member? <Link to='/login'>Sign In</Link>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t)\n}\n\nexport default Register","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport InputBase from '@material-ui/core/InputBase'\nimport { makeStyles, fade } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n  },\n}))\n\nfunction Search({ search, setSearch }) {\n  const classes = useStyles()\n\n  const handleSearch = (event) => {\n    const { value } = event.target\n    setSearch(value)\n  }\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <InputBase\n        placeholder=\"Search…\"\n        name=\"search\"\n        value={search}\n        onChange={handleSearch}\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        inputProps={{ 'aria-label': 'search' }}\n      />\n    </div>\n  )\n}\n\nexport default Search","import React, { useState } from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport Chip from '@material-ui/core/Chip'\nimport IconButton from '@material-ui/core/IconButton'\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { makeStyles } from '@material-ui/core/styles'\nimport formatDate from '../utils/formatDate.js'\n//import addToList from '../auth/addToList'\nimport axios from 'axios'\nimport UserStore from '../stores/UserStore'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    margin: 10,\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n    maxWidth: 1000\n  },\n  chip: {\n  \tmargin: 10\n  }\n}))\n\nfunction Article({article, setMyList }) {\n\tconst classes = useStyles()\n\tconst { id, name, description, datePublished, tags, owningOrgId, sourceUrl } = article\n  const [isBtnDisabled, setIsBtnDisabled] = useState(false)\n\n  const handleList = () => {\n    setMyList(prev => !prev.includes(name) ? [...prev, name] : prev)\n  }\n\n  async function addToList() {\n    try {\n      let res = await axios({\n        url: '/list',\n        method: 'post',\n        headers: { \n          'Accept': 'application/json', \n          'Content-Type': 'application/json' \n        },\n        data: JSON.stringify({\n          username: UserStore.username,\n          listID: id\n        })\n      })\n      \n      let result = await res.data\n      \n      if (result && result.success) {\n        UserStore.loading = false\n        setIsBtnDisabled(true)\n        UserStore.list.push(result.listID)\n      } else {\n        UserStore.loading = false\n      }\n      \n    } catch(err) {\n        UserStore.loading = false\n    }\n  }\n\n\treturn (\n\t\t<Card className={classes.root} variant=\"outlined\">\n\t\t\t<div className={classes.details}>\n\t    \t<CardContent className={classes.content}>\t\n\t    \t\t<Typography variant=\"h5\" component=\"h2\" gutterBottom>\n          \t<Link href={sourceUrl} target=\"blank\" color=\"inherit\" underline=\"none\">{name}</Link>\n        \t</Typography>\n        \t<Typography color=\"textSecondary\" gutterBottom>\n          \t{owningOrgId} • Published: {formatDate(datePublished)}\n        \t</Typography>\n        \t{tags.map(tag => (\n        \t\t<Chip \n        \t\t\tclassName={classes.chip}\n        \t\t\tsize=\"small\"\n        \t\t\tlabel={tag.name} \n        \t\t\tvariant=\"outlined\"\n        \t\t\tclickable\n        \t\t\tcolor=\"primary\"\n        \t\t\tkey={tag.id}\n        \t\t/>\n        \t))}\n        \t<Typography>\n          \t{description}\n        \t</Typography>\n            <IconButton color=\"primary\" aria-label=\"add to list\" onClick={addToList} disabled={isBtnDisabled}>\n              <AddCircleIcon />\n            </IconButton>  {isBtnDisabled ? \"Added to list\" : \"Add to my list\"}\n\t    \t</CardContent>\t\n    \t</div>\n    </Card>\t\n\t)\n}\n\nexport default Article","export default function formatDate(date) {\n\tconst y = new Date(date).getFullYear()\n\tconst m = new Date(date).getMonth()\n\tconst d = new Date(date).getDate()\n\treturn `${m}-${d}-${y}`\n}","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nexport default function useAPI() {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [articles, setArticles] = useState([])\n\n  useEffect(() => {\n    const getResults = async () => {\n      setLoading(true)\n      setError(false)\n      try {\n        const res = await axios.get('https://tools.cdc.gov/api/v2/resources/media?max=100')\n        setArticles(res.data.results)\n        setLoading(false)\n      } catch(err) {\n        setError(true)\n      }\n    }\n    getResults()\n  }, [])\n\n  return { loading, error, articles, setArticles }\n}","import React from 'react'\nimport Article from './Article'\nimport useAPI from '../hooks/useAPI'\n\nfunction ArticleList({articles, setMyList}) {\n\tconst { loading } = useAPI()\n\n\tif (loading) {\n\t\treturn <p>Loading...</p>\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{articles.map(article => <Article article={article} key={article.id} setMyList={setMyList} />)}\t\n\t\t</div>\n\t)\n}\n\nexport default ArticleList","import axios from 'axios'\nimport UserStore from '../stores/UserStore'\n\nexport default async function logOut() {\n  try {\n    let res = await axios({\n      url: '/logOut',\n      method: 'post',\n      headers: { \n        'Accept': 'application/json', \n        'Content-Type': 'application/json' \n      }\n    })\n\n    let result = await res.data\n    \n    if (result && result.success) {\n      UserStore.isLoggedIn = false\n      UserStore.username = ''\n    } \n  } catch(err) {\n      console.log(err)\n  }\n} ","import React, { useState } from 'react'\nimport UserStore from '../stores/UserStore'\nimport clsx from 'clsx'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport Search from './Search'\nimport Submit from './Submit'\nimport logout from '../auth/logout'\nimport usePagination from '../hooks/usePagination'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n    //textAlign: 'center'\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nexport default function PersistentDrawerRight({myList, search, setSearch}) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [open, setOpen] = useState(false)\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            CDC Content\n          </Typography>\n          <Search search={search} setSearch={setSearch}/>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"end\"\n            onClick={handleDrawerOpen}\n            className={clsx(open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n     \n      </main>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button>\n            <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"My List\" />\n          </ListItem>\n          {UserStore.list.map(item => <ListItem>{item}</ListItem>)}\n        </List>\n        <Divider />\n        <List>\n          <ListItem>\n            <ListItemText>\n              <Submit \n                text={'Log Out'} \n                color=\"secondary\"\n                disabed={false} \n                onClick={() => logout()}\n              />\n            </ListItemText>\n          </ListItem>\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n","import axios from 'axios'\nimport UserStore from '../stores/UserStore'\n\nexport default async function login() {\n  try {\n    let res = await axios({\n      url: '/isLoggedIn',\n      method: 'post',\n      headers: { \n        'Accept': 'application/json', \n        'Content-Type': 'application/json' \n      }\n    })\n    \n    let result = await res.data\n    \n    if (result && result.success) {\n      UserStore.loading = false\n      UserStore.isLoggedIn = true\n      UserStore.username = result.username\n    } else {\n      UserStore.loading = false\n      UserStore.isLoggedIn = false\n    }\n    \n  } catch(err) {\n      UserStore.loading = false\n      UserStore.isLoggedIn = false\n  }\n}","import React, { useState, useEffect } from 'react'\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom'\nimport { observer } from 'mobx-react'\nimport UserStore from './stores/UserStore'\nimport Login from './components/Login'\nimport Register from './components/Register'\nimport Search from './components/Search'\nimport ArticleList from './components/ArticleList'\nimport Pagination from '@material-ui/lab/Pagination'\nimport Drawer from './components/Drawer'\nimport usePagination from './hooks/usePagination'\nimport login from './auth/login'\nimport './App.css'\n\nfunction App() {\n  const { search, setSearch, pageCount, currentPage, handleChange, currentArticles } = usePagination()\n  const [myList, setMyList] = useState([]) // ADD TO DB\n\n  useEffect(() => {\n    login()\n  }, [])\n  \n  // if (UserStore.loading) {\n  //   return (\n  //     <div className=\"App\">\n  //       <p>Loading...</p>\n  //     </div>\n  //   )\n  // } \n  // else if (!UserStore.isLoggedIn) {\n  //   return (\n  //     <div className=\"App\">\n  //       <Router>\n  //         <Switch>\n  //           <Route exact path=\"/register\">              \n  //             <Register />\n  //           </Route> \n  //           <Route exact path=\"/login\"> \n  //             <Login />\n  //           </Route>   \n  //         </Switch>  \n  //       </Router>  \n  //     </div>\n  //   )\n  // } \n  // else { \n    return (\n      <div className=\"App\">\n        <p>Welcome, {UserStore.username}</p>\n        <Drawer myList={myList} search={search} setSearch={setSearch}/>\n        <Pagination \n          count={pageCount}\n          page={currentPage}\n          onChange={handleChange}\n        />\n        <ArticleList articles={currentArticles} setMyList={setMyList}/>\n      </div>      \n    )\n//  }\n}\n\nexport default observer(App)","import { useState, useEffect } from 'react'\nimport useAPI from './useAPI'\n\nexport default function usePagination() {\n  const { articles } = useAPI()\n  const [search, setSearch] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [articlesPerPage] = useState(20)\n  const [filteredArticles, setFilteredArticles] = useState([])\n\n  const indexOfLastPost = currentPage * articlesPerPage\n  const indexOfFirstPost = indexOfLastPost - articlesPerPage\n  const currentArticles = filteredArticles.slice(indexOfFirstPost, indexOfLastPost)\n  const pageCount = Math.ceil(filteredArticles.length / articlesPerPage)\n\n  const handleChange = (event, value) => {\n    setCurrentPage(value);\n  }\n\n  useEffect(() => {\n    setFilteredArticles(articles.filter(a => {\n      return a.name.toLowerCase().includes(search.toLowerCase())\n    }))\n    setCurrentPage(1)\n  }, [search, articles])\n\n  return { search, setSearch, pageCount, currentPage, handleChange, currentArticles }\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}